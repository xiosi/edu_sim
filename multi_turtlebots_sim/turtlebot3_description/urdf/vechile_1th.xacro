<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="vechile">
<xacro:property name="body_x" value="0.2" />
<xacro:property name="body_y" value="0.1" />
<xacro:property name="body_z" value="0.05" />
<xacro:property name="wheel_r" value="0.025" />
<xacro:property name="wheel_l" value="0.025" />
<xacro:property name="body_mass" value="0.5" />
<xacro:property name="wheel_mass" value="0.05" />
<xacro:property name="pi" value="3.1415926"/>
<xacro:property name="lidar_a" value="0.05"/>
<xacro:property name="lidar_mass" value="0.05" />
<xacro:property name="lidar_name" value="camera" />
<xacro:property name="sphere_r" value="0.025" />
<xacro:property name="sphere_mass" value="0.05" />
<!-- <xacro:property name="ns" value="car1/" /> -->

<material name="black">
    <color rgba="0 0 0 1"/>
</material>

<material name="white">
    <color rgba="1 1 1 1"/>
</material>
<material name="red">
    <color rgba="1 0 0 1"/>
</material>
<material name="green">
    <color rgba="0 1 0 1"/>
</material>
<material name="blue">
    <color rgba="0 0 1 1"/>
</material>
<link name="base_link">
    <visual>
        <geometry>
            <box size="${body_x} ${body_y} ${body_z}"/>
        </geometry>
        <material name="white"/>
        <origin xyz="0 0 ${body_z/2}"/>
    </visual>
    <collision>
        <geometry>
            <box size="${body_x} ${body_y} ${body_z}"/>
        </geometry>
        <origin xyz="0 0 ${body_z/2}"/>
    </collision>
    <inertial>
        <mass value="${body_mass}" />
        <inertia ixx="${body_mass/12*(body_y*body_y+body_z*body_z)}"
        iyy="${body_mass/12*(body_x*body_x+body_z*body_z)}"
        izz="${body_mass/12*(body_y*body_y+body_x*body_x)}" 
        ixy="0.0" ixz="0.0" iyz="0.0"/>
    </inertial>

</link>
<gazebo reference="base_link">
    <material>Gazebo/White</material>
</gazebo>

<xacro:macro name="wheel" params="prefix">
    <link name="${prefix}_wheel">
        <visual>
            <geometry>
                <cylinder length="${wheel_l}" radius="${wheel_r}"/>
            </geometry>
            <material name="black"/>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        </visual>
        <collision>
            <geometry>
                <cylinder length="${wheel_l}" radius="${wheel_r}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        </collision>
        <inertial>
            <mass value="${wheel_mass}" />
            <inertia ixx="${wheel_mass/12*(3*wheel_r*wheel_r+wheel_l*wheel_l)}" 
            iyy="${wheel_mass/12*(3*wheel_r*wheel_r+wheel_l*wheel_l)}"
            izz="${wheel_mass/2*(wheel_r*wheel_r)}" 
            ixy="0.0" ixz="0.0" iyz="0.0"/>
        </inertial>
    </link>
    <transmission name="${prefix}_wheel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="${prefix}_wheel_motor">
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="${prefix}_wheel_to_base">
            <hardwareInterface>VelocityJointInterface</hardwareInterface>
        </joint>
    </transmission>
    <gazebo reference="${prefix}_wheel">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
    </gazebo>


</xacro:macro>


<xacro:macro name="sphere_wheel" params="prefix">
    <link name="${prefix}_sphere">
        <visual>
            <geometry>
                <sphere radius="${sphere_r}" />
            </geometry>
            <material name="black"/>
            <origin xyz="0 0 0" rpy="0 0 0" />
        </visual>
        <collision>
            <geometry>
                <sphere radius="${sphere_r}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
        </collision>
        <inertial>
            <mass value="${sphere_mass}" />
            <inertia ixx="${sphere_mass*2/3*(sphere_r*sphere_r)}" 
            iyy="${sphere_mass*2/3*(sphere_r*sphere_r)}"
            izz="${sphere_mass*2/3*(sphere_r*sphere_r)}" 
            ixy="0.0" ixz="0.0" iyz="0.0"/>
        </inertial>
    </link>
</xacro:macro>

<xacro:wheel prefix="left_front" />
<xacro:wheel prefix="right_front" />
<joint name="left_front_wheel_to_base" type="continuous">
    <parent link="base_link"/>
    <child link="left_front_wheel"/>
    <origin xyz="0 ${body_y/2+wheel_l/2} 0" />
    <axis xyz="0 1 0"/>
</joint>

<joint name="right_front_wheel_to_base" type="continuous">
    <parent link="base_link"/>
    <child link="right_front_wheel"/>
    <origin xyz="0 ${-body_y/2-wheel_l/2} 0"/>
    <axis xyz="0 1 0"/>
</joint>



<xacro:sphere_wheel prefix="front" />
<xacro:sphere_wheel prefix="back" />

<joint name="front_sphere_to_base" type="fixed">
    <parent link="base_link"/>
    <child link="front_sphere"/>
    <origin xyz="${body_x/2} 0 0" />
</joint>

<joint name="back_sphere_to_base" type="fixed">
    <parent link="base_link"/>
    <child link="back_sphere"/>
    <origin xyz="${-body_x/2} 0 0" />

</joint>



<link name="lidar_link">
    <visual>
        <geometry>
            <box size="${lidar_a} ${lidar_a} ${lidar_a}"/>
        </geometry>
        <material name="red"/>
        <origin xyz="0 0 ${lidar_a/2}"/>
    </visual>
    <collision>
        <geometry>
            <box size="${lidar_a} ${lidar_a} ${lidar_a}"/>
        </geometry>
        <origin xyz="0 0 ${lidar_a/2}"/>
    </collision>
    <inertial>
        <mass value="${lidar_mass}" />
        <inertia 
        ixx="${lidar_mass/12*(lidar_a*lidar_a+lidar_a*lidar_a)}"
        iyy="${lidar_mass/12*(lidar_a*lidar_a+lidar_a*lidar_a)}"
        izz="${lidar_mass/12*(lidar_a*lidar_a+lidar_a*lidar_a)}" 
        ixy="0.0" ixz="0.0" iyz="0.0"/>
    </inertial>
</link>
<joint name="lidar_base" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="${body_x/4} 0 ${body_z}"/>
</joint>    
<gazebo reference="lidar_link">
      <material>Gazebo/Red</material>
</gazebo>



<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>30</updateRate>
    <leftJoint>left_front_wheel_to_base</leftJoint>
    <rightJoint>right_front_wheel_to_base</rightJoint>
    <wheelSeparation>0.5380</wheelSeparation>
    <wheelDiameter>0.2410</wheelDiameter>
    <torque>20</torque>
    <commandTopic>cmd_vel</commandTopic>

    <publishOdom>false</publishOdom>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_link</robotBaseFrame>
  </plugin>

</gazebo>


 <gazebo reference="lidar_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>


</robot>
